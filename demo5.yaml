# Copyright 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: '3.6'

volumes:
  cargo-registry1:
  cargo-registry2:
  cargo-registry3:
  cargo-registry4:
  cargo-registry5:
  keys:

services:

  validator-1:
    image: sawtooth-poet2-validator:latest
    build:
      context: .
      dockerfile: poet2-validator.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    expose:
      - 4004
      - 8800
      - 5050
    volumes:
      - keys:/shared_keys
    # start the validator with an empty genesis batch
    working_dir: /root
    command: "bash -c \"\
        sawadm keygen validator-2 && \
        sawadm keygen validator-3 && \
        sawadm keygen validator-4 && \
        sawadm keygen validator-5 && \
        sawadm keygen && \
        sawset genesis \
          -k /etc/sawtooth/keys/validator.priv \
          -o config-genesis.batch && \
        sawset proposal create \
          -k /etc/sawtooth/keys/validator.priv \
          sawtooth.consensus.algorithm=poet2 \
          sawtooth.poet.block_claim_delay=0 \
          -o config.batch && \
        sawadm genesis \
          config-genesis.batch config.batch && \
        mv /etc/sawtooth/keys/validator-* /shared_keys && \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-1:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers tcp://validator-2:8800
            --peers tcp://validator-5:8800
            --scheduler parallel \
    \""
    stop_signal: SIGKILL

  validator-2:
    image: sawtooth-poet2-validator:latest
    build:
      context: .
      dockerfile: poet2-validator.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    expose:
      - 4004
      - 8800
      - 5050
    volumes:
      - keys:/shared_keys
    # start the validator with an empty genesis batch
    working_dir: /root
    command: "bash -c \"\
        while true; do if [ -e /shared_keys/validator-2.pub ]; then mv /shared_keys/validator-2.priv /etc/sawtooth/keys/validator.priv && mv /shared_keys/validator-2.pub /etc/sawtooth/keys/validator.pub; break; fi; sleep 0.5; done; \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-2:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers tcp://validator-1:8800
            --peers tcp://validator-4:8800
            --scheduler parallel \

    \""
    stop_signal: SIGKILL

  validator-3:
    image: sawtooth-poet2-validator:latest
    build:
      context: .
      dockerfile: poet2-validator.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    expose:
      - 4004
      - 8800
      - 5050
    volumes:
      - keys:/shared_keys
    # start the validator with an empty genesis batch
    working_dir: /root
    command: "bash -c \"\
        while true; do if [ -e /shared_keys/validator-3.pub ]; then mv /shared_keys/validator-3.priv /etc/sawtooth/keys/validator.priv && mv /shared_keys/validator-3.pub /etc/sawtooth/keys/validator.pub; break; fi; sleep 0.5; done; \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-3:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers tcp://validator-4:8800
            --peers tcp://validator-5:8800
            --scheduler parallel \

    \""
    stop_signal: SIGKILL

  validator-4:
    image: sawtooth-poet2-validator:latest
    build:
      context: .
      dockerfile: poet2-validator.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    expose:
      - 4004
      - 8800
      - 5050
    volumes:
      - keys:/shared_keys
    # start the validator with an empty genesis batch
    working_dir: /root
    command: "bash -c \"\
        while true; do if [ -e /shared_keys/validator-4.pub ]; then mv /shared_keys/validator-4.priv /etc/sawtooth/keys/validator.priv && mv /shared_keys/validator-4.pub /etc/sawtooth/keys/validator.pub; break; fi; sleep 0.5; done; \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-4:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers tcp://validator-2:8800
            --peers tcp://validator-3:8800
            --scheduler parallel \

    \""
    stop_signal: SIGKILL

  validator-5:
    image: sawtooth-poet2-validator:latest
    build:
      context: .
      dockerfile: poet2-validator.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    expose:
      - 4004
      - 8800
      - 5050
    volumes:
      - keys:/shared_keys
    # start the validator with an empty genesis batch
    working_dir: /root
    command: "bash -c \"\
        while true; do if [ -e /shared_keys/validator-5.pub ]; then mv /shared_keys/validator-5.priv /etc/sawtooth/keys/validator.priv && mv /shared_keys/validator-5.pub /etc/sawtooth/keys/validator.pub; break; fi; sleep 0.5; done; \
        echo $$(cat /etc/sawtooth/keys/validator.pub); \
        sawtooth-validator -v \
            --endpoint tcp://validator-5:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
            --peering static \
            --peers tcp://validator-1:8800
            --peers tcp://validator-3:8800
            --scheduler parallel \

    \""
    stop_signal: SIGKILL

  poet-2-engine-1:
    build:
      context: .
      dockerfile: poet2-engine.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/project/sawtooth-poet2
      - cargo-registry1:/root/.cargo/registry
    working_dir: '/project/sawtooth-poet2/src/core'
    depends_on:
      - validator-1
    entrypoint: "bash -c \"\
        RUST_BACKTRACE=1 cargo run --bin poet2 -- -C tcp://validator-1:5050 -v \""
    stop_signal: SIGKILL

  poet-2-engine-2:
    build:
      context: .
      dockerfile: poet2-engine.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/project/sawtooth-poet2
      - cargo-registry2:/root/.cargo/registry
    working_dir: '/project/sawtooth-poet2/src/core'
    depends_on:
      - validator-2
    entrypoint: "bash -c \"\
        RUST_BACKTRACE=1 cargo run --bin poet2 -- -C tcp://validator-2:5050 -v \""
    stop_signal: SIGKILL

  poet-2-engine-3:
    build:
      context: .
      dockerfile: poet2-engine.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/project/sawtooth-poet2
      - cargo-registry3:/root/.cargo/registry
    working_dir: '/project/sawtooth-poet2/src/core'
    depends_on:
      - validator-3
    entrypoint: "bash -c \"\
        RUST_BACKTRACE=1 cargo run --bin poet2 -- -C tcp://validator-3:5050 -v \""
    stop_signal: SIGKILL

  poet-2-engine-4:
    build:
      context: .
      dockerfile: poet2-engine.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/project/sawtooth-poet2
      - cargo-registry4:/root/.cargo/registry
    working_dir: '/project/sawtooth-poet2/src/core'
    depends_on:
      - validator-4
    entrypoint: "bash -c \"\
        RUST_BACKTRACE=1 cargo run --bin poet2 -- -C tcp://validator-4:5050 -v \""
    stop_signal: SIGKILL

  poet-2-engine-5:
    build:
      context: .
      dockerfile: poet2-engine.dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./:/project/sawtooth-poet2
      - cargo-registry5:/root/.cargo/registry
    working_dir: '/project/sawtooth-poet2/src/core'
    depends_on:
      - validator-5
    entrypoint: "bash -c \"\
        RUST_BACKTRACE=1 cargo run --bin poet2 -- -C tcp://validator-5:5050 -v \""
    stop_signal: SIGKILL

  rest-api-1:
    image: hyperledger/sawtooth-rest-api:latest
    expose:
      - "8008"
    depends_on:
      - validator-1
    entrypoint: sawtooth-rest-api -C tcp://validator-1:4004 --bind rest-api-1:8008

  rest-api-2:
    image: hyperledger/sawtooth-rest-api:latest
    expose:
      - "8008"
    depends_on:
      - validator-2
    entrypoint: sawtooth-rest-api -C tcp://validator-2:4004 --bind rest-api-2:8008

  rest-api-3:
    image: hyperledger/sawtooth-rest-api:latest
    expose:
      - "8008"
    depends_on:
      - validator-3
    entrypoint: sawtooth-rest-api -C tcp://validator-3:4004 --bind rest-api-3:8008

  rest-api-4:
    image: hyperledger/sawtooth-rest-api:latest
    expose:
      - "8008"
    depends_on:
      - validator-4
    entrypoint: sawtooth-rest-api -C tcp://validator-4:4004 --bind rest-api-4:8008

  rest-api-5:
    image: hyperledger/sawtooth-rest-api:latest
    expose:
      - "8008"
    depends_on:
      - validator-5
    entrypoint: sawtooth-rest-api -C tcp://validator-5:4004 --bind rest-api-5:8008

  settings-tp-1:
    image: hyperledger/sawtooth-settings-tp:latest
    depends_on:
      - validator-1
    entrypoint: settings-tp -vv -C tcp://validator-1:4004

  settings-tp-2:
    image: hyperledger/sawtooth-settings-tp:latest
    depends_on:
      - validator-2
    entrypoint: settings-tp -vv -C tcp://validator-2:4004

  settings-tp-3:
    image: hyperledger/sawtooth-settings-tp:latest
    depends_on:
      - validator-3
    entrypoint: settings-tp -vv -C tcp://validator-3:4004

  settings-tp-4:
    image: hyperledger/sawtooth-settings-tp:latest
    depends_on:
      - validator-4
    entrypoint: settings-tp -vv -C tcp://validator-4:4004

  settings-tp-5:
    image: hyperledger/sawtooth-settings-tp:latest
    depends_on:
      - validator-5
    entrypoint: settings-tp -vv -C tcp://validator-5:4004

  intkey-tp-python-1:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    depends_on:
      - validator-1
    entrypoint: intkey-tp-python -vv -C tcp://validator-1:4004

  intkey-tp-python-2:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    depends_on:
      - validator-2
    entrypoint: intkey-tp-python -vv -C tcp://validator-2:4004

  intkey-tp-python-3:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    depends_on:
      - validator-3
    entrypoint: intkey-tp-python -vv -C tcp://validator-3:4004

  intkey-tp-python-4:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    depends_on:
      - validator-4
    entrypoint: intkey-tp-python -vv -C tcp://validator-4:4004

  intkey-tp-python-5:
    image: hyperledger/sawtooth-intkey-tp-python:latest
    depends_on:
      - validator-5
    entrypoint: intkey-tp-python -vv -C tcp://validator-5:4004

  shell:
    image: hyperledger/sawtooth-all:latest
    container_name: sawtooth-shell-default
    depends_on:
      - rest-api-1
      - rest-api-2
      - rest-api-3
      - rest-api-4
      - rest-api-5
    entrypoint: "bash -c \"\
        sawtooth keygen && \
        tail -f /dev/null \
        \""

